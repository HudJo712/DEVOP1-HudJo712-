pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "hudjo712/ci-cd-demo:latest"
    }

    stages {
        stage('Checkout') {
            steps {
                git credentialsId: 'b9e3076c-5e67-4eee-97c0-17184f698c47',
                    branch: 'main',
                    url: 'git@github.com:HudJo712/DEVOP1-HudJo712-.git'
            }
        }

        stage('Run Tests') {
            steps {
                sh '''
                    docker run --rm python:3.9 bash -c "
                    mkdir /app &&
                    echo 'flask\npytest' > /app/requirements.txt &&
                    pip install -r /app/requirements.txt &&
                    echo \\"print('Hello from Docker')\\" > /app/app.py &&
                    python /app/app.py
                    "
                    '''
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('ci-cd-demo') {
                    sh 'docker build -t hudjo712/ci-cd-demo:latest .'
                }
            }
        }


        stage('Push Docker Image') {
            steps {
                withDockerRegistry([credentialsId: 'docker-hub-creds', url: '']) {
                    sh 'docker push $DOCKER_IMAGE'
                }
            }
        }
        stage('Check k8s Directory') {
            steps {
                sh 'ls -l ci-cd-demo/k8s'
            }
        }
        stage('Debug Paths') {
            steps {
                sh '''
                echo "PWD is: $PWD"
                ls -l "$PWD/ci-cd-demo/k8s"
                '''
            }
        }
        stage('Deploy to Kubernetes') {
            steps {
                script {
                    def deployYaml = readFile('ci-cd-demo/k8s/deployment.yaml').replace('"', '\\"')

                    sh """
                    docker run --rm \
                        --entrypoint bash \
                        -v "\$HOME/.kube":/root/.kube \
                        bitnami/kubectl:latest -c "
                        echo \\"${deployYaml}\\" > /deploy.yaml &&
                        kubectl apply -f /deploy.yaml
                        "
                    """
                }
            }
        }

    }
}
